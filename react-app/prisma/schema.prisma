// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // output   = "generated"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ============================== Template ================================= //
// model User {
//   id    Int     @id @default(autoincrement())
//   email String  @unique
//   name  String?
//   posts Post[]
// }
//
// model Post {
//   id        Int     @id @default(autoincrement())
//   title     String
//   content   String?
//   published Boolean @default(false)
//   author    User    @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

// ============================== User ================================= //

model User {
  phone  String  @id @unique
  name   String?
  avatar String?

  // auto-generated
  ReviewConversationStorage   ReviewConversationStorage? @relation(fields: [reviewConversationStorageId], references: [id])
  reviewConversationStorageId Int?

  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id Int @id @default(autoincrement())
}

// ============================== Review ================================= //

model ReviewConversationStorage {
  id         Int    @id @unique @default(autoincrement())
  profile_id String @default("")

  // TODO
  RequestMessage String?
  RequestUser    String
  mentioned      User[]

  fileInfo   ReviewFileInfo @relation(fields: [fileInfoId], references: [id])
  fileInfoId Int

  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ReviewFileInfo {
  id                        Int                         @id @unique @default(autoincrement())
  hash                      String
  filePath                  String
  filename                  String
  filesize                  Int
  filetype                  String
  ReviewConversationStorage ReviewConversationStorage[]

  deleted   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
